load_module modules/ngx_http_modsecurity_module.so;

user ${USER};
worker_processes 4;

pid /var/run/nginx.pid;

events {
    worker_connections ${WORKER_CONNECTIONS};
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  sendfile on;

  keepalive_timeout ${NGINX_KEEPALIVE_TIMEOUT};

  include /etc/nginx/conf.d/*.conf;

  real_ip_header X-Forwarded-For;
  set_real_ip_from 127.0.0.1/32;
  set_real_ip_from 10.0.0.0/8;
  set_real_ip_from 172.16.0.0/12;
  set_real_ip_from 192.168.0.0/16;
  set_real_ip_from 52.222.122.97/32;
  set_real_ip_from 52.222.123.172/32;

  real_ip_recursive on;

  server {
    listen 80 default_server;
    server_name 127.0.0.1;

    satisfy any;

    error_page 403 = @forbidden;

    location @forbidden {
      allow all;
      access_log off;

      default_type text/plain;
      return 403 'Forbidden by ${BLOCKED_NAME}';
    }

    location @check {
      default_type text/plain;
      return 200 'OK';
    }

    location = /_route-service-health {
      allow 127.0.0.1/32;
      allow 10.0.0.0/8;

      ${IP_ALLOWED_HEALTH}

      deny all;

      #allow all;
      access_log off;

      stub_status on;
      access_log off;
    }

    location = /_route-service-check {

      try_files $uri @check;
    }

    location / {
      allow 127.0.0.1/32;
      allow 172.0.0.0/8;

      ${IP_ALLOWED}

      deny all;

      resolver 169.254.0.2 ipv6=off;

      set $cf_forwarded_host '*';
      set $cf_forwarded_uri '*';

      if ($http_x_cf_forwarded_url ~* ^(https?\:\/\/)(.*?)\/(.*)$) {
        set $cf_forwarded_host $2;
        set $cf_forwarded_uri /$3;
      }

      proxy_http_version 1.1;
      proxy_ssl_server_name on;
      proxy_ssl_protocols TLSv1.2;
      proxy_set_header Connection "";
      proxy_set_header Host $cf_forwarded_host;
      proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

      #Â Use XX-CF-APP-INSTANCE on the original request if you wish to target an instance
      proxy_set_header X-CF-APP-INSTANCE $http_xx_cf_app_instance;

      proxy_pass $http_x_forwarded_proto://$http_host$cf_forwarded_uri;
    }
  }
}
