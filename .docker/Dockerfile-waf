FROM owasp/modsecurity:nginx-alpine

LABEL maintainer="Felipe Zipitria <felipe.zipitria@owasp.org>"

ARG RELEASE=3.3.2

ARG GITBRANCH
ENV GITBRANCH ${GITBRANCH:-none}

ARG GITCOMMIT
ENV GITCOMMIT ${GITCOMMIT:-none}

ARG GITTAG
ENV GITTAG ${GITTAG:-none}

ENV APP_NAME=USAGov \
    PARANOIA=2 \
    ANOMALY_INBOUND=5 \
    ANOMALY_OUTBOUND=4 \
    NGINX_KEEPALIVE_TIMEOUT=60s \
    ERRORLOG=/var/log/nginx/error.log \
    LOGLEVEL=warn \
    USER=nginx \
    PORT=80 \
    SERVERNAME=locahost \
    WORKER_CONNECTIONS=1024 \
    MODSEC_DEFAULT_PHASE1_ACTION="phase:1,pass,log,tag:'\${MODSEC_TAG}'" \
    MODSEC_DEFAULT_PHASE2_ACTION="phase:2,pass,log,tag:'\${MODSEC_TAG}'" \
    MODSEC_RULE_ENGINE=off \
    MODSEC_REQ_BODY_ACCESS=on \
    MODSEC_REQ_BODY_LIMIT=13107200 \
    MODSEC_REQ_BODY_NOFILES_LIMIT=131072 \
    MODSEC_RESP_BODY_ACCESS=on \
    MODSEC_RESP_BODY_LIMIT=1048576 \
    MODSEC_PCRE_MATCH_LIMIT=500000 \
    MODSEC_PCRE_MATCH_LIMIT_RECURSION=500000

COPY src-waf/docker-entrypoint-waf.sh /
COPY src-waf/etc/ /etc/
COPY src-waf/opt/ /opt/

RUN apk update && \
    apk add vim \
    bash \
    jq \
    inotify-tools

# hadolint ignore=DL3008,SC2016
RUN set -eux; \
    apk add --no-cache \
    ca-certificates \
    curl \
    sed; \
    mkdir /tmp/owasp-crs; \
    curl -SL https://github.com/coreruleset/coreruleset/archive/v${RELEASE}.tar.gz \
    | tar -zxf - --strip-components=1 -C /tmp/owasp-crs; \
    mv -vf /tmp/owasp-crs/rules/* /opt/owasp-crs/rules; \
    rm -rf /tmp/owasp-crs; \
    ln -sv /opt/owasp-crs /etc/modsecurity.d;

RUN set -eux; \
    mkdir /var/log/modsecurity && \
    touch /var/log/modsecurity/modsec_audit.log;

COPY src-waf/opt/owasp-crs/modsecurity.conf /etc/modsecurity.d/modsecurity.conf
COPY src-waf/opt/owasp-crs/modsecurity-override.conf /etc/modsecurity.d/modsecurity-override.conf
COPY src-waf/opt/owasp-crs/setup.conf /etc/modsecurity.d/setup.conf
COPY src-waf/cert-watcher.sh /cert-watcher.sh

COPY motd /etc/motd

RUN echo "    built:" $(date) >> /etc/motd \
    && echo "    branch: " $GITBRANCH >> /etc/motd \
    && echo "    gittag: " $GITTAG >> /etc/motd \
    && echo "    commit: " $GITCOMMIT >> /etc/motd \
    && echo >> /etc/motd

ENTRYPOINT ["/docker-entrypoint-waf.sh"]
CMD ["nginx", "-g", "daemon off;"]
