
FROM composer:latest AS composer-builder

WORKDIR /var/www

RUN sed -i s/utmp:x:100:/utmp:x:406/g /etc/passwd \
    && sed -i s/svn:x:101:101/svn:x:102:102/g /etc/passwd \
    && sed -i s/svnusers:x:101:svn/svnusers:x:102:svn/g /etc/group \
    && addgroup -g 101 nginx \
    && adduser nginx -G nginx -H -D -u 100 \
    && echo 'memory_limit = -1' | tee -a /usr/local/etc/php/conf.d/docker-php-memlimit.ini \
    && mkdir -p /var/www/vendor \
    && find /var/www -not -user $(id -u nginx) -not -group $(id -g nginx) -print0 | xargs -P 0 -0 --no-run-if-empty chown --no-dereference nginx:nginx

COPY --chown=nginx:nginx composer.json /var/www/composer.json
COPY --chown=nginx:nginx composer.lock /var/www/composer.lock
COPY --chown=nginx:nginx patches /var/www/patches

USER nginx

RUN mkdir -p /var/www/vendor \
    && composer global require --dev drupal/coder:8.3.13 php-parallel-lint/php-parallel-lint \
    && COMPOSER_DIR=$(composer -n config --global home) \
    && $COMPOSER_DIR/vendor/bin/phpcs --config-set installed_paths $COMPOSER_DIR/vendor/drupal/coder/coder_sniffer \
    && COMPOSER_MEMORY_LIMIT=-1 composer install --ignore-platform-reqs --no-interaction --optimize-autoloader

###############################################################

FROM node:16.8.0-alpine3.13 AS theme-builder
RUN sed -i s/node:x:1000:1000/node:x:100:101/g /etc/passwd \
    && sed -i s/node:x:1000/node:x:101/g /etc/group \
    && apk upgrade --update --no-cache \
    && apk add --no-cache --virtual .persistent-deps \
      ca-certificates \
      curl \
      git \
      openssh \
    && npm install --global \
      git \
      gulp \
      gulp-cli

COPY --from=composer-builder --chown=node:node /var/www/web /var/www/web
COPY --chown=node:node themes/custom/usagov /var/www/web/themes/custom/usagov

WORKDIR /var/www/web/themes/custom/usagov/

RUN npm install --production=false --prefix /var/www/web/themes/custom/usagov \
    && npm rebuild node-sass --prefix /var/www/web/themes/custom/usagov \
    && npm run build --prefix /var/www/web/themes/custom/usagov


###############################################################


FROM alpine:3.14 AS cms
LABEL MAINTAINER=dan@mobomo.com

ARG S6_VERSION
ENV S6_VERSION ${S6_VERSION:-v2.2.0.3}

ARG GITBRANCH
ENV GITBRANCH ${GITBRANCH:-none}

ARG GITCOMMIT
ENV GITCOMMIT ${GITCOMMIT:-none}

ARG GITTAG
ENV GITTAG ${GITTAG:-none}

ADD https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/s6overlay.tar.gz

# Depenancies
RUN apk upgrade --update --no-cache \
    && apk add --no-cache --virtual .persistent-deps \
    aws-cli \
    ca-certificates \
    curl \
    gettext \
    git \
    jq \
    moreutils \
    tar \
    xz \
    vim \
    jq \
    pv \
    mysql-client \
    mariadb-connector-c \
    nginx \
    nginx-mod-http-lua \
    php8 \
    php8-fpm \
    php8-bcmath \
    php8-bz2 \
    php8-calendar \
    php8-curl \
    php8-ctype \
    php8-dom \
    php8-fileinfo \
    php8-ftp \
    php8-gd \
    php8-intl \
    php8-iconv \
    php8-imap \
    php8-intl \
    php8-json \
    php8-ldap \
    php8-mbstring \
    php8-mysqlnd \
    php8-openssl \
    php8-opcache \
    php8-pcntl \
    php8-pdo \
    php8-pdo_mysql \
    php8-pdo_sqlite \
    php8-pear \
    php8-pecl-imagick \
    php8-pecl-xdebug \
    php8-phar \
    php8-posix \
    php8-session \
    php8-simplexml \
    php8-shmop \
    php8-soap \
    php8-sockets \
    php8-sodium \
    php8-sqlite3 \
    php8-sysvmsg \
    php8-sysvsem \
    php8-sysvshm \
    php8-tokenizer \
    php8-tidy \
    php8-xsl \
    php8-xml \
    php8-xmlreader \
    php8-xmlwriter \
    php8-zip \
    php8-zlib \
    && mkdir -p /var/www/web/sites/default/files \
    # s6 supervisor setup
    && tar xzf /tmp/s6overlay.tar.gz -C / \
    && rm /tmp/s6overlay.tar.gz \
    # webserver setup
    && mkdir -p /var/www/ \
    && chown -R nginx:nginx /var/www \
    && mkdir -p /var/log/nginx \
    && chown -R nginx:nginx /var/log/nginx \
    && ln -s /dev/stderr /var/log/nginx/error.log \
    && ln -s /dev/stdout /var/log/nginx/access.log \
    && mkdir -p /run/nginx/ \
    && touch /run/nginx/nginx.pid \
    # php setup
    && ln -s /usr/bin/php8 /usr/bin/php \
    && ln -s /usr/sbin/php-fpm8 /usr/sbin/php-fpm \
    # cron setup
    && mkdir -p /etc/periodic/30min \
    && echo "*/30    *       *       *       *       run-parts /etc/periodic/30min" >> /etc/crontabs/root \
    # cleanup
    && rm -rf /var/cache/apk/*

# new relic setup
RUN echo "Installing New Relic"

ARG NEW_RELIC_AGENT_VERSION
ARG NEW_RELIC_LICENSE_KEY
ARG NEW_RELIC_APP_NAME

RUN \
  curl -L "https://download.newrelic.com/php_agent/release/${NEW_RELIC_AGENT_VERSION}" | tar -C /tmp -zx && \
  export NR_INSTALL_USE_CP_NOT_LN=1 && \
  export NR_INSTALL_SILENT=1 && \
  /tmp/newrelic-php5-*/newrelic-install install && \
  rm -rf /tmp/newrelic-php5-* /tmp/nrinstall* && \
  sed -i \
      -e "s/REPLACE_WITH_REAL_KEY/${NEW_RELIC_LICENSE_KEY}/" \
      -e "s/newrelic.appname =.*/newrelic.appname = ${NEW_RELIC_APP_NAME}/" \
      -e 's/;newrelic.daemon.app_connect_timeout =.*/newrelic.daemon.app_connect_timeout=15s/' \
      -e 's/;newrelic.daemon.start_timeout =.*/newrelic.daemon.start_timeout=5s/' \
       $(php -r "echo(PHP_CONFIG_FILE_SCAN_DIR);")/newrelic.ini

ENV PATH=/var/www/vendor/bin:$PATH

COPY .docker/src-cms/etc /etc
COPY .docker/motd /etc/motd
COPY --chown=nginx:nginx composer.json /var/www/composer.json
COPY --chown=nginx:nginx composer.lock /var/www/composer.lock
COPY --chown=nginx:nginx scripts /var/www/scripts
COPY --chown=nginx:nginx config /var/www/config
COPY --chown=nginx:nginx patches /var/www/patches
COPY --chown=nginx:nginx libraries /var/www/web/libraries
COPY --chown=nginx:nginx modules /var/www/web/modules
COPY --chown=nginx:nginx themes /var/www/web/themes
COPY --chown=nginx:nginx settings /var/www/web/sites/default
COPY --from=composer-builder --chown=nginx:nginx /var/www/vendor /var/www/vendor
COPY --from=composer-builder --chown=nginx:nginx /var/www/web /var/www/web
COPY --from=theme-builder --chown=nginx:nginx /var/www/web/themes/custom /var/www/web/themes/custom

RUN chmod -R +x /etc/periodic \
    && rm -f /var/www/web/sites/default/settings.local.php \
    && rm -rf /var/www/web/sites/default/files/* \
    && rm -rf /var/www/web/themes/custom/usagov/node_modules \
    && chown nginx:nginx /var/www \
    && find /var/www -not -user $(id -u nginx) -not -group $(id -g nginx) -print0 | xargs -P 0 -0 --no-run-if-empty chown --no-dereference nginx:nginx \
    && echo "    built:" $(date) >> /etc/motd \
    && echo "    branch: " $GITBRANCH >> /etc/motd \
    && echo "    gittag: " $GITTAG >> /etc/motd \
    && echo "    commit: " $GITCOMMIT >> /etc/motd \
    && echo >> /etc/motd \
    && cp /etc/motd /var/www/build.info \
    && echo "PATH=$PATH" > /etc/profile.d/drupal.sh

EXPOSE 80

WORKDIR /var/www

# Init s6
ENTRYPOINT [ "/init" ]
