{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{% set column_grid = element['#object'].field_2_column_grid.getString() %}
{% set first_column_grid_class = [
    '4-8' == column_grid ? 'tablet:grid-col-4',
    '8-4' == column_grid ? 'tablet:grid-col-8',
    '3-9' == column_grid ? 'tablet:grid-col-3',
    '9-3' == column_grid ? 'tablet:grid-col-9',
  ]
%}

{% set second_column_grid_class = [
  '4-8' == column_grid ? 'tablet:grid-col-8',
  '8-4' == column_grid ? 'tablet:grid-col-4',
  '3-9' == column_grid ? 'tablet:grid-col-9',
  '9-3' == column_grid ? 'tablet:grid-col-3',
]
%}

{% set classes = [
    'grid-col-6',
  ]
%}
{% set first_column_classes = classes|merge(first_column_grid_class) %}
{% set second_column_classes = classes|merge(second_column_grid_class) %}

{%- for item in items -%}
  {% if loop.index == 1 %}
    <div {{ item.attributes.addClass(first_column_classes) }}>
      {{ item.content }}
    </div>
  {% elseif loop.index == 2 %}
    <div{{ item.attributes.addClass(second_column_classes) }}>
      {{ item.content }}
    </div>
  {% endif %}
{%- endfor -%}
