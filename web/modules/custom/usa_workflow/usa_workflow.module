<?php

/**
 * @file
 * Interface with Form state.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Description message.
 *
 * @param mixed $form
 *   Self described.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Self described.
 * @param mixed $form_id
 *   Self described.
 */
function usa_workflow_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $newform = [
    'node_basic_page_form',
    'node_wizard_step_form',
    'node_wizard_form',
  ];

  // Call 'wfUserpermission' method from declared service
  // 'usa_workflow.permission.service'.
  $wfusers = Drupal::service('usa_workflow.permission.service')->wfUserpermission();

  // Compare current logged in user and revised user are not the same
  // also make sure the current logged in user as
  // 'usa approve own content' permission.
  if ((in_array($form_id, $newform)
      || $wfusers['currentUser']['id'] === $wfusers['reviseduser']['id'])
      && $wfusers['currentUser']['usaapproveowncontent'] === FALSE) {
    unset($form['moderation_state']['widget'][0]['state']['#options']['published']);
    if (isset($form['new_state'])) {
      unset($form['new_state']['#options']['published']);
    }
    if (isset($form['actions'])) {
      unset($form['actions']['delete']);
    }
  }
}

/**
 * Description message.
 *
 * @param mixed $data
 *   Self described.
 * @param mixed $route_name
 *   Self described.
 */
function usa_workflow_menu_local_tasks_alter(&$data, $route_name) {
  // Call 'wfUserpermission' method from declared
  // service 'usa_workflow.permission.service'.
  $wfusers = Drupal::service('usa_workflow.permission.service')->wfUserpermission();

  // Compare current logged in user and revised user are not the same
  // also make sure the current logged in user as
  // 'usa delete own content' permission.
  if ($wfusers['currentUser']['id'] === $wfusers['reviseduser']['id']
    && $wfusers['currentUser']['usadeleteowncontent'] === FALSE) {
    unset($data['tabs'][0]['entity.node.delete_form']);
  }
}
