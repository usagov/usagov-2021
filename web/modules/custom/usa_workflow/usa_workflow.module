<?php

/**
 * @file
 */

use Drupal\user\Entity\User;
use Drupal\Core\Form\FormStateInterface;

/**
 * @param mixed $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param mixed $form_id
 *
 * @return null
 */
function usa_workflow_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $newform = [
    'node_basic_page_form',
    'node_wizard_step_form',
    'node_wizard_form',
  ];
  $wfusers = wf_user_role();
  if ((in_array($form_id, $newform)
      || $wfusers['currentUser']['id'] === $wfusers['reviseduser']['id'])
      && $wfusers['currentUser']['ocepr'] === FALSE) {
    unset($form['moderation_state']['widget'][0]['state']['#options']['published']);
    if (isset($form['new_state'])) {
      unset($form['new_state']['#options']['published']);
    }
    if (isset($form['actions'])) {
      unset($form['actions']['delete']);
    }
  }
}

/**
 * @param mixed $data
 * @param mixed $route_name
 *
 * @return null
 */
function usa_workflow_menu_local_tasks_alter(&$data, $route_name) {
  $wfusers = wf_user_role();
  if ($wfusers['currentUser']['id'] === $wfusers['reviseduser']['id']
    && $wfusers['currentUser']['ocepr'] === FALSE) {
    unset($data['tabs'][0]['entity.node.delete_form']);
  }
}

/**
 * @return array
 */
function wf_user_role() {
  $return = [];
  $ocepr = FALSE;
  // Check if the user have 'overwrite the Content Editor permission restriction'
  // 'Content Editor' user role with other role except Anonymous user role...
  if (\Drupal::currentUser()->hasPermission('overwrites the Content Editor permission restriction')) {
    $ocepr = TRUE;
  }
  // Users and their roles from current node.
  $currentUser = \Drupal::currentUser();
  $node = \Drupal::routeMatch()->getParameter('node') ?? new stdClass();
  if (($node !== NULL && !empty($node)) && get_class($node) == 'Drupal\node\Entity\Node') {
    $reviseduser = User::load(\Drupal::routeMatch()->getParameter('node')->getRevisionUserId());
  }
  // Current logged in user.
  $return['currentUser']['id'] = $currentUser->id();
  $return['currentUser']['roles'] = $currentUser->getRoles();
  $return['currentUser']['ocepr'] = $ocepr;
  // Reviseduser.
  if ($reviseduser !== NULL) {
    $return['reviseduser']['id'] = $reviseduser->id();
    $return['reviseduser']['roles'] = $reviseduser->getRoles();
  }
  return $return;
}
