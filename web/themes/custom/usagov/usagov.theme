<?php

use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

/**
 * @file
 * USWDS Base sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
* This makes the node varialbe available to the templates/html.html.twig template file
*/
function usagov_preprocess_html(&$variables) {
  $variables['node'] = \Drupal::routeMatch()->getParameter('node');
}

function children_of_active_menu_item(&$items) {
  $result = NULL;
  foreach ($items as $object) {
    if ($object['in_active_trail'] === TRUE) {
      $result = $object;
      break;
    }
  }
  if ($result === NULL) {
    return $items;
  }
  else {
    return children_of_active_menu_item($result['below']);
  }
}

/**
 * Process block content
 */
function usagov_preprocess_block(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $variables['node'] = $node;

  if ($node->hasField('field_page_type') && $node->get('field_page_type')[0]->target_id) {
    $pagetypeTid = $node->get('field_page_type')[0]->target_id;
    $variables['pagetype'] = Term::load($pagetypeTid)->getName();
  }

  if ($variables['elements']['#id'] == 'navigation_page_items' || $variables['elements']['#id'] == 'navigation_page_items_spanish') {
    $items = $variables['content']['#items'];
    $children_of_active_menu_item = children_of_active_menu_item($items);
    $nav_page_items = [];
    foreach ($children_of_active_menu_item as $child) {
      try {
        $childNid = $child['url']->getRouteParameters()['node'];
        $childNode = Node::load($childNid);
        $data = new StdClass();
        $data->title = $childNode->get('title')->value;
        $data->url = $childNode->toUrl()->toString();
        if ($childNode->hasField('field_short_description') && $childNode->get('field_short_description')->value != "") {
          $data->description = $childNode->get('field_short_description')->value;
        }
        elseif ($childNode->hasField('field_page_intro') && $childNode->get('field_page_intro')->value != "") {
          $data->description = $childNode->get('field_page_intro')->value;
        }
        else {
          $data->description = $childNode->get('field_meta_description')->value;
        }

        if ($childNode->hasField('field_navigation_banner_image' && count($childNode->get('field_navigation_banner_image')))
          && $childNode->get('field_navigation_banner_image')[0]->entity
        ) {
          $data->navigation_banner_image = file_url_transform_relative(file_create_url(
            $childNode->get('field_navigation_banner_image')[0]->entity->get('field_media_image')->entity->getFileUri()
          ));
        }
        if ($childNode->hasField('field_css_icon') && count($childNode->get('field_css_icon'))) {
          $data->css_icon = $childNode->get('field_css_icon')[0]->value;
        }
        if ($childNode->hasField('promote')) {
          $data->promote = $childNode->get('promote')->value;
        }
        // $data->node = $childNode;
        array_push($nav_page_items, $data);
      }
      catch (Exception $e) {
        $menuItem = $child['original_link']->getPluginDefinition();
        $data = new StdClass();
        $data->title = $menuItem['title'];
        $data->url = $menuItem['url'];
        if (strncmp($data->url, "base:", 5) === 0) {
          $host = \Drupal::request()->getSchemeAndHttpHost();
          $data->url = "/" . substr($data->url, 5);
        }
        $data->description = $menuItem['description'];
        array_push($nav_page_items, $data);
      }
    }
    $variables['nav_page_items'] = $nav_page_items;
  }
}

function usagov_preprocess_views_view_list(&$variables) {
  $variables['node'] = \Drupal::routeMatch()->getParameter('node');
}

function usagov_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'views_view_fields') {
    $id = $variables['view']->storage->id();
    if ($id == "sub_children") {
      $suggestions[] = 'views_view_fields__sub_children';
    }
  }
  if ($hook == 'views_view_field') {
    $id = $variables['view']->storage->id();
    if ($id == "sub_children") {
      $suggestions[] = 'views_view_field__sub_children';
    }
  }
  if ($hook == 'views_view') {
    $id = $variables['view']->storage->id();
    if ($id == "sub_children") {
      $suggestions[] = 'views_view__sub_children';
    }
  }
  if ($hook == 'views_view_list') {
    $id = $variables['view']->storage->id();
    if ($id == "sub_children") {
      $suggestions[] = 'views_view_list__sub_children';
    }
  }
  if ($hook == 'field') {
    if (in_array('field__node__field_custom_twig_content', $suggestions) &&
        $variables['element']['#object']->field_custom_twig_content->value) {
      $current_path = \Drupal::service('path.current')->getPath();
      $current_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
      $no_slash = ltrim($current_alias, '/');
      $no_dash = str_replace('-', '_', $no_slash);
      $suggestions[] = 'field__node__field_custom_twig_content_' . $no_dash;
    }
  }
}
