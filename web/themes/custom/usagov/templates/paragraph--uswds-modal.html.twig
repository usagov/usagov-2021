{#
/**
 * @file
 * Default theme implementation to display a paragraph in USWDS Paragraph Components.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  'paragraph--id--' ~ paragraph.id.value,
] %}

{% set id = 'paragraph--id--' ~ paragraph.id.value %}
{% set model_id = paragraph.id.value %}
{% set modal_large = content.field_large_modal['#items'].getString() ? ' usa-modal--lg' %}
{% set force_action = content.field_force_action['#items'].getString() ? ' data-force-action' %}

<div{{ attributes.addClass(classes) }}>
  {% if content.field_display_as_button == false %}
    <a href="#{{ id }}" class="usa-button usa-button--unstyled padding-105 text-center" aria-controls="{{ id }}" data-open-modal hidden>{{ content.field_button_text }}</a>
  {% else %}
    <a href="#{{ id }}" class="usa-button" aria-controls="{{ id }}" data-open-modal hidden>{{ content.field_button_text }}</a>
  {% endif %}
</div>

<div class="usa-modal{{ modal_large }}" id="{{ id }}" aria-labelledby="{{ model_id }}-heading" aria-describedby="{{ model_id }}-description"{{ force_action }} hidden>
  <div class="usa-modal__content">
    <div class="usa-modal__main">
      <h1 class="usa-modal__heading" id="{{ model_id }}-heading">
        {{ content.field_modal_title }}
      </h1>
      <div class="usa-prose">
        <p id="{{ model_id }}-description">
          {{ content.field_modal_body }}
        </p>
      </div>
      <div class="usa-modal__footer">
        <ul class="usa-button-group">
          {% if content.field_modal_yes_button_text|render %}
          <li class="usa-button-group__item">
            <button type="button" class="usa-button border border-ink hover:border" data-close-modal>
                {{ content.field_modal_yes_button_text }}
            </button>
          </li>
          {% endif %}
          {% if content.field_modal_no_button_text|render %}
          <li class="usa-button-group__item">
            <button type="button" class="usa-button usa-button--unstyled padding-105 text-center" data-close-modal>
                {{ content.field_modal_no_button_text }}
            </button>
          </li>
          {% endif %}
        </ul>
      </div>
    </div>
    {# The X button is removed because having 2 different buttons which perfom the same action of closing the modal is bad for accessibility #}
    {# {% if force_action is empty %}
      <button class="usa-button usa-modal__close" aria-label="Close this window" data-close-modal>
        <svg class="usa-icon" aria-hidden="true" focusable="false" role="img">
          <use xlink:href="/modules/contrib/uswds_paragraph_components/components/modal/sprite.svg#close"></use>
        </svg>
      </button>
    {% endif %} #}
  </div>
</div>
