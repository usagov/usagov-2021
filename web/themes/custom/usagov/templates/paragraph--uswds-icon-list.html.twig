{#
/**
 * @file
 * Default theme implementation to display a paragraph in USWDS Paragraph Components.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  'paragraph--id--' ~ paragraph.id.value,
]
%}


{% set default_icon = content.field_uswds_icon[0]['#title'] %}
{% set default_color = content.field_default_icon_color[0]['#title'] %}
{% set icon_size = content.field_icon_size[0]['#markup'] %}

<div{{ attributes.addClass(classes) }}>
  <ul class="usa-icon-list {{ icon_size ? ' usa-icon-list--size-'~icon_size : '' }} {{ content.field_custom_classes[0] }}">
    {% for key, item in content.field_uswds_icon_list_item if key|first != '#' %}
      {% set icon = item['#paragraph'].field_uswds_icon.entity.name[0].value|default(default_icon) %}
      {% set color = item['#paragraph'].field_uswds_color.entity.name[0].value|default(default_color) %}
      {% set heading = item['#paragraph'].field_heading.value %}
      {% set text = item['#paragraph'].field_text_plain_long.value|raw %}

      <li class="usa-icon-list__item">
        <div class="usa-icon-list__icon {{ color ? 'text-'~color : '' }}">
          <svg class="usa-icon" aria-hidden="true" role="img">
            <use xlink:href="/themes/custom/usagov/assets/img/sprite.svg#{{ icon }}"></use>
          </svg>
        </div>
        <div class="usa-icon-list__content">
          {% if heading %}
            <h3 class="usa-icon-list__title">{{heading|raw}}</h3>
            <p>{{text}}</p>
          {% else %}
            {{text}}
          {% endif %}
        </div>
      </li>
    {% endfor %}
  </ul>
</div>
