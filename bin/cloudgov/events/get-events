#!/bin/sh

# we might be running in circleci
if [ -f /home/circleci/project/env.local ]; then
  . /home/circleci/project/env.local
fi
# we might be running from a local dev machine
SCRIPT_DIR="$(dirname "$0")"
if [ -f $SCRIPT_DIR/env.local ]; then
  . $SCRIPT_DIR/env.local
fi
if [ -f ./env.local ]; then
  . ./env.local
fi

if ! command -v cf &> /dev/null
then
    echo "CF : the cloud foundry client could not be found and is required"
    exit 1
fi
if [ -f $SCRIPT_DIR/../../deploy/includes ]; then
  . $SCRIPT_DIR/../../deploy/includes
else
   echo Cannot find $SCRIPT_DIR/../../deploy/includes
   exit 1
fi

# just testing?
if [ x$1 = x"--dryrun" ]; then
  export echo=echo
  dryrun=$1
  shift
fi

SPACE=${1:-please-provide-space-name-as-first-argument}
SPACE=$(echo "$SPACE" | tr '[:upper:]' '[:lower:]')
assertCurSpace $SPACE
shift

CURRENT_ORG=$(getOrg)
#echo $CURRENT_ORG
export ORG_GUID=$(cf org $CURRENT_ORG --guid)

#AUDIT_TYPES="audit.user.space_developer_add,audit.user.space_developer_remove,audit.user.space_auditor_add,audit.user.space_auditor_remove,audit.user.space_manager_add,audit.user.space_manager_remove"
#AUDIT_TYPES="audit.route.create,audit.route.delete-request,audit.route.update"
#AUDIT_TYPES="audit.service_instance.create,audit.service_instance.bind_route,audit.service_instance.update,audit.service_instance.unbind_route,audit.service_instance.delete"
#AUDIT_TYPES="audit.service.create,audit.service.delete,audit.service.update,audit.service_binding.create,audit.service_binding.delete,service_instance.bind_route,audit.service_instance.create,audit.service_instance.delete,audit.service_instance.unbind_route,audit.service_instance.update"
AUDIT_TYPES="audit.app.start"

NEXT="/v2/events?q=type+IN+${AUDIT_TYPES}&q=organization_guid:$ORG_GUID"

while [ -n $NEXT -a ! $NEXT == 'null' ]; do
    echo $NEXT
    EVENTS=$(cf curl $NEXT)
    NEXT=$(echo $EVENTS | jq -r '.next_url')
done 
