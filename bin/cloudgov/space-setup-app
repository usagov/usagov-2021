#!/usr/bin/env bash

APP_SPACE=${1:-dev-restricted}
ORG=gsa-tts-usagov

# create space
if cf space $APP_SPACE > /dev/null 2>&1; then
  echo "space $APP_SPACE already exists"
else
  echo "Create app space $APP_SPACE"
  echo "cf create-space $APP_SPACE"
fi

# create service account
if cf service cloud-gov-service-account | grep cloud-gov-service-account | grep cci-${APP_SPACE}-service-account > /dev/null 2>&1; then
  echo "service-account cci-${APP_SPACE}-service-account already exists"
else
  echo "create service-account cci-${APP_SPACE}-service-account"
  echo "cf create-service cloud-gov-service-account space-deployer cci-${APP_SPACE}-service-account"
  echo "cf create-service-key cci-${APP_SPACE}-service-account cci-${APP_SPACE}-service-key"
  echo "cf service-key cci-${APP_SPACE}-service-account cci-${APP_SPACE}-service-key"
fi

# https://docs.cloudfoundry.org/concepts/asg.html

# setup asg network for running lifecycle to be restricted via egress
if cf security-groups | grep running | grep $APP_SPACE | grep restricted-egress > /dev/null 2>&1; then
  echo "restricted-egress already bound to $APP_SPACE during 'running' lifecycle"
else
  echo "bind public_network_egress to $APP_SPACE during 'running' lifecycle"
  echo "cf bind-security-group restricted-egress $ORG $APP_SPACE --lifecycle running"
fi

# setup asg network for staging lifecycle to be public
if cf security-groups | grep staging | grep $APP_SPACE | grep public_networks_egress > /dev/null 2>&1; then
  echo "public_networks_egress already bound to $APP_SPACE during 'staging' lifecycle"
else
  echo "bind public_network_egress to $APP_SPACE during 'staging' lifecycle"
  echo "cf bind-security-group public_networks_egress $ORG $APP_SPACE --lifecycle staging"
fi

