#!/usr/bin/env bash

# we might be running in circleci
if [ -f /home/circleci/project/env.local ]; then
  . /home/circleci/project/env.local
fi
# we might be running from a local dev machine
SCRIPT_DIR="$(dirname "$0")"
if [ -f $SCRIPT_DIR/env.local ]; then
  . $SCRIPT_DIR/env.local
fi
if [ -f ./env.local ]; then
  . ./env.local
fi
if [ -f $SCRIPT_DIR/../deploy/includes ]; then
  . $SCRIPT_DIR/../deploy/includes
else
   echo Cannot find $SCRIPT_DIR/../deploy/includes
   exit 1
fi

# just testing?
if [ x$1 = x"--dryrun" ]; then
  export echo=echo
  shift
fi

SPACE=${1:-please-provide-space-name-as-first-argument}
SPACE=$(echo "$SPACE" | tr '[:upper:]' '[:lower:]')
assertCurSpace $SPACE
shift

keyname="cci"
resetkey="false"
for var in "$@"
do
  if [ "$var" = "--reset-key" ]; then
    resetkey="resetkey"
  else
    keyname="$var"
  fi
done

# Grab the starting space and org where the command was run
startorg=$(   cf target | grep org:   | awk '{ print $2 }')
startspace=$( cf target | grep space: | awk '{ print $2 }')

echo echo:       $echo
echo keyname:    $keyname
echo resetkey:   $resetkey
echo startorg:   $startorg
echo startspace: $startspace

SWITCHBACK=0
if [ 1 -eq 1 ]; then
   CFV=$(cf -v)
   echo $CFV | grep 'version 7' -
   if [ $? != "0" ]; then
     echo "Switching to compatible rev (7) of cf cli..."
     sudo apt-get -y remove cf8-cli  &> /dev/null && sudo apt-get -y install cf7-cli  &> /dev/null && cf version
     if [ $? != "0" ]; then
       echo Error occurred switching versions of CF CLI
       exit 1
     fi
     SWITCHBACK=1
   fi
fi

echo cf create-service cloud-gov-service-account space-deployer $keyname-service-account
$echo cf create-service cloud-gov-service-account space-deployer $keyname-service-account

if [ "$SWITCHBACK" != "0" ]; then
  echo "Switching back to standard rev (8) of cf cli..."
  sudo apt-get -y remove cf7-cli  &> /dev/null && sudo apt-get -y install cf8-cli  &> /dev/null && cf version
  if [ $? != "0" ]; then
    echo Error occurred switching versions of CF CLI
    exit 1
  fi
fi

if [ "$resetkey" = "--reset-key" ]; then
  $echo cf delete-service-key $keyname-service-account $keyname-service-key -f
fi
echo cf create-service-key $keyname-service-account $keyname-service-key
$echo cf create-service-key $keyname-service-account $keyname-service-key
SERVICE_KEY=$(cf service-key $keyname-service-account $keyname-service-key | tail -n +3)
echo "Created service key '$keyname-service-key' for $keyname-service-account:  $SERVICE_KEY"
SERVICE_USER=$( echo $SERVICE_KEY | jq -r '.credentials.username')
echo "Created service key '$keyname-service-key' for $keyname-service-account:  $SERVICE_KEY"

 echo cf set-space-role $SERVICE_USER $startorg dev SpaceDeveloper
$echo cf set-space-role $SERVICE_USER $startorg dev SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg stage SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg stage SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg prod SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg prod SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg tools SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg tools SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg shared-egress SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg shared-egress SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg shared-egress-dr SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg shared-egress-dr SpaceDeveloper
# echo cf set-space-role $SERVICE_USER $startorg dev-dr SpaceDeveloper
#$echo cf set-space-role $SERVICE_USER $startorg dev-dr SpaceDeveloper
