#!/bin/bash
set -e
set -o pipefail

# we might be running in circleci
if [ -f /home/circleci/project/env.local ]; then
  . /home/circleci/project/env.local
fi
# we might be running from a local dev machine
SCRIPT_DIR="$(dirname "$(readlink "$0")")"
if [ -f $SCRIPT_DIR/env.local ]; then
  . $SCRIPT_DIR/env.local
fi
if [ -f ./env.local ]; then
  . ./env.local
fi


usage="
$0: (Re-)deploy newrelic for an environment

Usage:
   $0 -h

Options:
-h:            show help and exit
egressspace:   space with newrelic (default: <currentspace>-egress)
egressorg:     org where the newrelic daemon space is (default: <currentorg>)

If the environment variable DRYRUN is set, the planned commands will be echoed rather
than invoked. For example:
   DRYRUN=1 $0 somespace someorg

Requirements:
- You must be a SpaceDeveloper in the current space and the egress_space.

NOTES:
- Any S3 buckets bound to an app will automatically be allowed for that app
- Your apps will be restarted in a rolling fashion to pick up variable changes
"

if [[ "$1" == "-h" ]]; then
    echo "${usage}"
    exit 1
fi

# Grab the starting space and org where the command was run
startorg=$(   cf target | grep org:   | awk '{ print $2 }')
startspace=$( cf target | grep space: | awk '{ print $2 }')

egressspace=${1:-shared-egress}
egressorg=${2:-$startorg}

# Drop them off where we found them
function popspace() {
    echo "Popspace: ${startorg}/${startspace}"
    cf target -o "$startorg" -s "$startspace" > /dev/null 2>&1
}
# trap popspace exit
trap popspace err

# Try to switch to the egress org+space, error out if it's not there
cf target -o "$egressorg" -s "$egressspace" > /dev/null 2>&1 ||
    (echo "ERROR: Space ${egressorg}/${egressspace} is not available!" && exit 1)

echo "Using Egress Space ${egressorg}/${egressspace}"

popspace

# If DRYRUN is set, don't run the commands, but echo them.
if [ -n "${DRYRUN}" ]; then
    output="echo # "
fi

# Assemble manifest-newrelic-vars.yml file content
echo "Create ./manifest-newrelic-vars.yml"
touch ./manifest-newrelic-vars.yml
echo "version: $NEW_RELIC_AGENT_VERSION
domain: $NEW_RELIC_DAEMON_DOMAIN
port: $NEW_RELIC_DAEMON_PORT
" > ./manifest-newrelic-vars.yml

# Deploy the proxy app
echo "Deploy Newrelic Daemon App"
$output cf target -o "$egressorg" -s "$egressspace" 2>&1 > /dev/null
$output cf push newrelic -f ./manifest-newrelic.yml --no-wait --strategy rolling --vars-file ./manifest-newrelic-vars.yml

if [ -n "${DRYRUN}" ]; then
    echo "# vars-file content:"
    echo "$(cat ./manifest-newrelic-vars.yml | sed -e 's/^/#  -->/')"
fi

popspace
