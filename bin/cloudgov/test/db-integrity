#!/bin/bash

#
# Requires sqlvalidator, run pip install sqlvalidator if this doesn't work.
#

echo "Testing static site integrity."

echo "Getting s3 access."
source bin/cloudgov/get-s3-access storage >/dev/null 2>&1

echo "Getting three random backup tags from s3."
DEPLOY_TAGS=$(aws s3 ls s3://"$S3_BUCKET"/db-backup/ | awk '{ print $4 }' |  sort -R | tail -n 3 )

echo "-----------------------------------"
echo "$DEPLOY_TAGS" | while read -r DEPLOY_TAG ; do
  echo "Downloading db: $DEPLOY_TAG"
  aws s3 cp --only-show-errors s3://"$S3_BUCKET"/db-backup/"$DEPLOY_TAG" "$DEPLOY_TAG"
  gunzip "$DEPLOY_TAG"
  sleep 5
  SQL_FILE=$(echo "$DEPLOY_TAG" | sed 's/.gz$//')

  echo "Testing: $SQL_FILE"

  size=$(du -hs "$SQL_FILE")
  echo "SQL file size: $(echo "$size" | awk '{print $1}')"

  echo "Validating SQL. This will take a while."
  validate=$(sqlvalidator --verbose-validate "$SQL_FILE")
  if [ -z "$validate" ]; then
    echo "SQL file is valid."
  else
    echo -e "\033[0;31mSQL file is invalid. Error(s):"
    echo -e "$validate\033[0m"
  fi

  rm "$SQL_FILE"
  echo "-----------------------------------"

done
echo "Automated testing complete."