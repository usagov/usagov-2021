#!/bin/bash

# doesn't check for the existence of the the thumbnail of an uploaded file

export HTTPS_TEST_URL="www.pandemicoversight.gov/version.txt";
export AWS_TEST_URL="s3-us-gov-west-1.amazonaws.com";
export EXISTING_BETA_FILE_FROM_S3="beta.usa.gov/themes/custom/usagov/images/LOGO_betasite_USAGOV_v2.png";
export EXISTING_CMS_FILE_FROM_S3="cms.usa.gov/s3/files/2022-03/Banner_img_Housing.png";
export EXISTING_LOCAL_FILE="2022-03/Banner_img_Housing.png";
export RUNTIME=$(date);

function runTests {
  # run all the tests
  getInfoPHPWrappers;
  getInfoPHPTransports;
  testDrupalStreamWrapperPrivate;
}

function testThatCurlCanReachAWS {
  # curl can reach aws host from the commandline
  echo
}


function testThatAWSClientCanReachAWS {
  # aws client can reach aws from the commandline
  echo
}

function testThatNGINXCanReadS3 {
  # nginx can respond with proxies files living in s3
  echo
}

function testThatPHPCanReachAWS { # AWS_TEST_URL
  # php can initiate a connection to aws
  drush ev --root=/var/www/ "\$response = file_get_contents('https://$AWS_TEST_URL', FALSE, NULL, 0, 1); print \"\nAssert('<') : '\"; print_r(\$response); print \"'\n\";"
}

function testThatDrupalCanReachAWS {
  # drupal can initiate a connection to aws through drush
  drush ev --root=/var/www/ "\$client = \Drupal::httpClient; \$response = \$client->get('https://$AWS_TEST_URL'); echo \"\nStatus Code: \".\$response->getStatusCode.\"\n\";"
}

function testDrupalStreamWrapperS3 {
  export TEST_FILE_FOR_S3="testDrupalStreamWrapperS3"
  # drupal can use the s3:// stream wrapper to read and write to s3
  echo "Expecting to write and read $RUNTIME to s3://$TEST_FILE_FOR_S3"
  drush ev --root=/var/www/ "var_dump(file_put_contents('s3://public/$TEST_FILE_FOR_S3','$RUNTIME'));"
  drush ev --root=/var/www/ "var_dump(file_get_contents('s3://public/$TEST_FILE_FOR_S3'));"
  # independantly check for existance of the file via aws cli
}

function testDrupalImageDerivationPublic {
  echo "Expecting Drush to generate a thumbnail for $EXISTING_LOCAL_FILE"
  drush --root=/var/www/ image-derive thumbnail public://$EXISTING_LOCAL_FILE
}
function testDrupalImageDerivationS3 {
  echo "Expecting Drush to generate a thumbnail for $EXISTING_LOCAL_FILE"
  drush --root=/var/www/ image-derive thumbnail s3://public/$EXISTING_LOCAL_FILE
}

function testDrupalStreamWrapperPublic {
  export TEST_FILE_FOR_S3="testDrupalStreamWrapperPublic"
  echo "Expecting to write and read $RUNTIME to public://$TEST_FILE_FOR_S3"
  # drupal can use the public:// stream wrapper to read and write to s3
  drush ev --root=/var/www/ "var_dump(file_put_contents('public://$TEST_FILE_FOR_S3','$RUNTIME'));"
  drush ev --root=/var/www/ "var_dump(file_get_contents('public://$TEST_FILE_FOR_S3'));"
  # independantly check for existance of the file via aws cli
}

function testDrupalStreamWrapperPrivate {
  export TEST_FILE_FOR_S3="testDrupalStreamWrapperPrivate"
  echo
  echo "Expecting to write and read $RUNTIME to private://$TEST_FILE_FOR_S3"
  # drupal can use the private:// stream wrapper to read and write to s3
  drush ev --root=/var/www/ "var_dump(file_put_contents('private://$TEST_FILE_FOR_S3','$RUNTIME'));"
  drush ev --root=/var/www/ "var_dump(file_get_contents('private://$TEST_FILE_FOR_S3'));"
  # independantly check for existance of the file via aws cli
}

function testDrupalStreamWrapperHTTPS {
  echo "Expecting to read a SEMVER vX.Y.Z from $HTTPS_TEST_URL"
  # drupal can use the https:// stream wrapper to read to a non-s3 file
  drush ev --root=/var/www/ "var_dump(file_get_contents('$HTTPS_TEST_URL'));"
}

function getInfoPHPTransports {
  echo
  echo "PHP stream_get_transports:"
  drush ev --root=/var/www/ "print_r(stream_get_transports());"
}

function getInfoPHPWrappers {
  echo
  echo "PHP stream_get_wrappers:"
  drush ev --root=/var/www/ "print_r(stream_get_wrappers());"
}


runTests;
