#!/bin/sh

usage="
$0: Gets the encryption configuration of the $S3_BUCKET bucket in the current space, for example, \"AES256\".

Usage:
   $0 -h

Options:
-h:            show help and exit
"

PREAMBLE=$( pwd -P )/bin/includes/preamble.sh
if [ -f "$PREAMBLE" ]; then
  # shellcheck source=bin/includes/preamble.sh
  . "$PREAMBLE"
else
   echo Cannot find preamble at "$PREAMBLE"
   exit 1
fi


# gather s3 credentials from storage key
cf create-service-key storage storagekey
S3INFO=$(cf service-key storage storagekey)
S3_BUCKET=$(echo "$S3INFO" | grep '"bucket":' | sed 's/.*"bucket": "\([^"]*\)".*/\1/')
S3_REGION=$(echo "$S3INFO" | grep '"region":' | sed 's/.*"region": "\([^"]*\)".*/\1/')
S3_ACCESS_KEY_ID=$(echo "$S3INFO" | grep '"access_key_id":' | sed 's/.*"access_key_id": "\([^"]*\)".*/\1/')
S3_SECRET_ACCESS_KEY=$(echo "$S3INFO" | grep '"secret_access_key":' | sed 's/.*"secret_access_key": "\([^"]*\)".*/\1/')

# pass s3 credentials through to container as env vars
mkdir -p $(pwd)/.aws
touch $(pwd)/.aws/env
echo "AWS_ACCESS_KEY_ID=$S3_ACCESS_KEY_ID" > $(pwd)/.aws/env
echo "AWS_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY" >> $(pwd)/.aws/env
echo "BUCKET_NAME=$S3_BUCKET" >> $(pwd)/.aws/env
echo "AWS_DEFAULT_REGION=$S3_REGION" >> $(pwd)/.aws/env

# get the encryption configuration of the $S3_BUCKET bucket in the current space
docker run --rm -it --env-file=$(pwd)/.aws/env -v $(pwd)/s3/local/cms/public:/aws \
  amazon/aws-cli:latest s3api get-bucket-encryption --bucket $S3_BUCKET --output json
