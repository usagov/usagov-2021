#!/bin/sh

# we might be running in circleci
if [ -f /home/circleci/project/env.local ]; then
  . /home/circleci/project/env.local
fi
# we might be running from a local dev machine
SCRIPT_DIR="$(dirname "$0")"
if [ -f $SCRIPT_DIR/env.local ]; then
  . $SCRIPT_DIR/env.local
fi
if [ -f ./env.local ]; then
  . ./env.local
fi

export BUCKET_SOURCE_FOLDER=public
if [ -f ./bin/snapshot-backups/snapshot-include ]; then
  . ./bin/snapshot-backups/snapshot-include
else
   echo Cannot find ${PWD}/bin/snapshot-backups/snapshot-include
   exit 1
fi

# just testing?
if [ x$1 == x"--dryrun" ]; then
  export echo=echo
  shift
fi

DEPLOY_TAG=${1}
SOURCE_DIR=${DEPLOY_TAG}.public
ZIP_FILE=$DEPLOY_TAG.public.zip

if [ -z "$SOURCE_DIR" ]; then
  echo "Usage: $0 <source directory> <tag?>"
  exit 1
fi

CLEANUP_REQUIRED=0
if [ x"$DEPLOY_TAG" != x ]; then
  # locate a local directory that contains a build of the static site
  # do some sanity checking on the directory (steal from tome-sync)
  if [ x$echo = x ]; then
    if [ -d "$SOURCE_DIR" ]; then
      echo "Found source directory: $SOURCE_DIR"
    else
      if [ -f $ZIP_FILE ]; then
        CLEANUP_REQUIRED=1
        unzip $ZIP_FILE
        if [ $? != 0 ]; then
          echo "Error unzipping $ZIP_FILE"
          exit 1
        fi
        if [ ! -d "$SOURCE_DIR" ]; then
          echo "ERROR: Zip file ($ZIP_FILE) was unpacked, but seems not to have produced a valid source directory ($SOURCE_DIR)."
          exit 1
        fi
      else
        echo "ERROR: Source directory ($SOURCE_DIR) or zip file ($ZIP_FILE) not found"
        exit 1
      fi
    fi
  fi
else
   echo "Usage: $0 <tag>"
   exit 1
fi

source bin/cloudgov/get-s3-access storage >/dev/null 2>&1

# upload that static site directory to a location within an s3 bucket represented by the tag
echo aws s3 cp --only-show-errors $SOURCE_DIR s3://$S3_BUCKET/$BUCKET_BACKUP_FOLDER/$DEPLOY_TAG/ --recursive
$echo aws s3 cp --only-show-errors $SOURCE_DIR s3://$S3_BUCKET/$BUCKET_BACKUP_FOLDER/$DEPLOY_TAG/ --recursive
retval=$?

if [ $CLEANUP_REQUIRED = 1 ]; then
  rm -rf $SOURCE_DIR
fi

exit $retval
