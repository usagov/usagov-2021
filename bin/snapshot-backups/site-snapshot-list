#!/bin/sh

usage="
$0: Lists all available static site backups on current environment.

Usage:
   $0 -h

Options:
-h:     show help and exit
"

PREAMBLE=$(sed -E 's/bin\/.*\/includes/bin\/includes/g' <<< "$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/includes/preamble.sh")
if [ -f "$PREAMBLE" ]; then
  # shellcheck source=bin/includes/preamble.sh
  . "$PREAMBLE"
else
  echo Cannot find preamble at "$PREAMBLE"
  exit 1
fi

if [ x$echo == xecho ]; then
  echo "Existing Static Site Tags ... (dry run - no tags will be collected)"
   exit
fi

printf "Existing Static Site Tags ..."

WITH_DATES="0"
SORT_METHOD="sort"
if [ "$1" == "--with-dates" ]; then
  WITH_DATES="1"
  SORT_METHOD="sort -rn -k1"
fi

# locate a directory within an s3 bucket that contains a build of the static site
# display a list of available tags (directories) and their last updated date

source bin/cloudgov/get-s3-access storage >/dev/null 2>&1

export available_tags=$(aws s3 ls s3://$S3_BUCKET/web-backup/ | awk '{print $NF}' | sed 's/[\/ ]*$//g')
# printf "\r                             \r"
if [ "$WITH_DATES" == "1" ]; then
  # sort by date, most recent first
  echo
  for tag in $(echo $available_tags); do
    # gather the most recently update file under the path-tag
    # there are >1k files so make sure we push the sort/extract logic into the server side query
    export last_updated=$(aws s3api list-objects-v2 --bucket $S3_BUCKET --prefix web-backup/$tag/ --query 'sort_by(Contents, &LastModified)[-1].LastModified' | sed 's/"//g')
    echo "$last_updated $tag"
  done | sort -rn -k1
else
  # default to alphabetical sorting by tag name
  echo
  echo "$available_tags" | sort
fi

# todo: add a file count next to each dir so we can tell if it is a bogus build
