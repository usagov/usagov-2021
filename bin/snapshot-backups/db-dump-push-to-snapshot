#!/usr/bin/env bash

# we might be running in circleci
if [ -f /home/circleci/project/env.local ]; then
  . /home/circleci/project/env.local
fi
# we might be running from a local dev machine
SCRIPT_DIR="$(dirname "$0")"
if [ -f $SCRIPT_DIR/env.local ]; then
  . $SCRIPT_DIR/env.local
fi
if [ -f ./env.local ]; then
  . ./env.local
fi

# just testing?
if [ x$1 == x"--dryrun" ]; then
  export echo=echo
  shift
fi

DEPLOY_TAG=${1}
SPACE=$(cf target | grep space: | awk '{ print $2 }')

if [ -z "$DEPLOY_TAG" ]; then
  echo "Usage: $0 <tag>"
  echo "This will attempt to push the database backup for the provided tag to $SPACE s3"
  exit 1
fi

SQL_FILE=${DEPLOY_TAG}.sql
GZIP_FILE=$SQL_FILE.gz

if [ x"$DEPLOY_TAG" != x ]; then
  # locate a local database gzip file
  if [ x$echo = x ]; then
    if [ -f "$GZIP_FILE" ]; then
      echo "Found local database file: $GZIP_FILE"
    else
      echo "ERROR: Local database file not found: $GZIP_FILE"
      exit 1
    fi
  fi
else
   echo "Usage: $0 <db zip file> <tag?>"
   exit 1
fi

$echo source bin/cloudgov/get-s3-access storage >/dev/null 2>&1

# upload that database gzip file to a location within an s3 bucket represented by the tag
echo  aws s3 cp --only-show-errors $GZIP_FILE s3://$S3_BUCKET/db-backup/$GZIP_FILE
$echo aws s3 cp --only-show-errors $GZIP_FILE s3://$S3_BUCKET/db-backup/$GZIP_FILE
